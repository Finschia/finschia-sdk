// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package privval

import (
	fmt "fmt"
	privval "github.com/Finschia/finschia-sdk/api/tendermint/privval"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_VRFProofRequest         protoreflect.MessageDescriptor
	fd_VRFProofRequest_message protoreflect.FieldDescriptor
)

func init() {
	file_ostracon_privval_types_proto_init()
	md_VRFProofRequest = File_ostracon_privval_types_proto.Messages().ByName("VRFProofRequest")
	fd_VRFProofRequest_message = md_VRFProofRequest.Fields().ByName("message")
}

var _ protoreflect.Message = (*fastReflection_VRFProofRequest)(nil)

type fastReflection_VRFProofRequest VRFProofRequest

func (x *VRFProofRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VRFProofRequest)(x)
}

func (x *VRFProofRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_ostracon_privval_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VRFProofRequest_messageType fastReflection_VRFProofRequest_messageType
var _ protoreflect.MessageType = fastReflection_VRFProofRequest_messageType{}

type fastReflection_VRFProofRequest_messageType struct{}

func (x fastReflection_VRFProofRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VRFProofRequest)(nil)
}
func (x fastReflection_VRFProofRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_VRFProofRequest)
}
func (x fastReflection_VRFProofRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VRFProofRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VRFProofRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_VRFProofRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VRFProofRequest) Type() protoreflect.MessageType {
	return _fastReflection_VRFProofRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VRFProofRequest) New() protoreflect.Message {
	return new(fastReflection_VRFProofRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VRFProofRequest) Interface() protoreflect.ProtoMessage {
	return (*VRFProofRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VRFProofRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Message) != 0 {
		value := protoreflect.ValueOfBytes(x.Message)
		if !f(fd_VRFProofRequest_message, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VRFProofRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		return len(x.Message) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		x.Message = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VRFProofRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		value := x.Message
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		x.Message = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		panic(fmt.Errorf("field message of message ostracon.privval.VRFProofRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VRFProofRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofRequest.message":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofRequest"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VRFProofRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ostracon.privval.VRFProofRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VRFProofRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VRFProofRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VRFProofRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VRFProofRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Message)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VRFProofRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Message) > 0 {
			i -= len(x.Message)
			copy(dAtA[i:], x.Message)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Message)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VRFProofRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VRFProofRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VRFProofRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Message = append(x.Message[:0], dAtA[iNdEx:postIndex]...)
				if x.Message == nil {
					x.Message = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VRFProofResponse       protoreflect.MessageDescriptor
	fd_VRFProofResponse_proof protoreflect.FieldDescriptor
	fd_VRFProofResponse_error protoreflect.FieldDescriptor
)

func init() {
	file_ostracon_privval_types_proto_init()
	md_VRFProofResponse = File_ostracon_privval_types_proto.Messages().ByName("VRFProofResponse")
	fd_VRFProofResponse_proof = md_VRFProofResponse.Fields().ByName("proof")
	fd_VRFProofResponse_error = md_VRFProofResponse.Fields().ByName("error")
}

var _ protoreflect.Message = (*fastReflection_VRFProofResponse)(nil)

type fastReflection_VRFProofResponse VRFProofResponse

func (x *VRFProofResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VRFProofResponse)(x)
}

func (x *VRFProofResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ostracon_privval_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VRFProofResponse_messageType fastReflection_VRFProofResponse_messageType
var _ protoreflect.MessageType = fastReflection_VRFProofResponse_messageType{}

type fastReflection_VRFProofResponse_messageType struct{}

func (x fastReflection_VRFProofResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VRFProofResponse)(nil)
}
func (x fastReflection_VRFProofResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_VRFProofResponse)
}
func (x fastReflection_VRFProofResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VRFProofResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VRFProofResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_VRFProofResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VRFProofResponse) Type() protoreflect.MessageType {
	return _fastReflection_VRFProofResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VRFProofResponse) New() protoreflect.Message {
	return new(fastReflection_VRFProofResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VRFProofResponse) Interface() protoreflect.ProtoMessage {
	return (*VRFProofResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VRFProofResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Proof) != 0 {
		value := protoreflect.ValueOfBytes(x.Proof)
		if !f(fd_VRFProofResponse_proof, value) {
			return
		}
	}
	if x.Error != nil {
		value := protoreflect.ValueOfMessage(x.Error.ProtoReflect())
		if !f(fd_VRFProofResponse_error, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VRFProofResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofResponse.proof":
		return len(x.Proof) != 0
	case "ostracon.privval.VRFProofResponse.error":
		return x.Error != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofResponse.proof":
		x.Proof = nil
	case "ostracon.privval.VRFProofResponse.error":
		x.Error = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VRFProofResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ostracon.privval.VRFProofResponse.proof":
		value := x.Proof
		return protoreflect.ValueOfBytes(value)
	case "ostracon.privval.VRFProofResponse.error":
		value := x.Error
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofResponse.proof":
		x.Proof = value.Bytes()
	case "ostracon.privval.VRFProofResponse.error":
		x.Error = value.Message().Interface().(*privval.RemoteSignerError)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofResponse.error":
		if x.Error == nil {
			x.Error = new(privval.RemoteSignerError)
		}
		return protoreflect.ValueOfMessage(x.Error.ProtoReflect())
	case "ostracon.privval.VRFProofResponse.proof":
		panic(fmt.Errorf("field proof of message ostracon.privval.VRFProofResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VRFProofResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.VRFProofResponse.proof":
		return protoreflect.ValueOfBytes(nil)
	case "ostracon.privval.VRFProofResponse.error":
		m := new(privval.RemoteSignerError)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.VRFProofResponse"))
		}
		panic(fmt.Errorf("message ostracon.privval.VRFProofResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VRFProofResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ostracon.privval.VRFProofResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VRFProofResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VRFProofResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VRFProofResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VRFProofResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VRFProofResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Proof)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Error != nil {
			l = options.Size(x.Error)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VRFProofResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Error != nil {
			encoded, err := options.Marshal(x.Error)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Proof) > 0 {
			i -= len(x.Proof)
			copy(dAtA[i:], x.Proof)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proof)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VRFProofResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VRFProofResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VRFProofResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proof = append(x.Proof[:0], dAtA[iNdEx:postIndex]...)
				if x.Proof == nil {
					x.Proof = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Error == nil {
					x.Error = &privval.RemoteSignerError{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Error); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Message                          protoreflect.MessageDescriptor
	fd_Message_pub_key_request          protoreflect.FieldDescriptor
	fd_Message_pub_key_response         protoreflect.FieldDescriptor
	fd_Message_sign_vote_request        protoreflect.FieldDescriptor
	fd_Message_signed_vote_response     protoreflect.FieldDescriptor
	fd_Message_sign_proposal_request    protoreflect.FieldDescriptor
	fd_Message_signed_proposal_response protoreflect.FieldDescriptor
	fd_Message_ping_request             protoreflect.FieldDescriptor
	fd_Message_ping_response            protoreflect.FieldDescriptor
	fd_Message_vrf_proof_request        protoreflect.FieldDescriptor
	fd_Message_vrf_proof_response       protoreflect.FieldDescriptor
)

func init() {
	file_ostracon_privval_types_proto_init()
	md_Message = File_ostracon_privval_types_proto.Messages().ByName("Message")
	fd_Message_pub_key_request = md_Message.Fields().ByName("pub_key_request")
	fd_Message_pub_key_response = md_Message.Fields().ByName("pub_key_response")
	fd_Message_sign_vote_request = md_Message.Fields().ByName("sign_vote_request")
	fd_Message_signed_vote_response = md_Message.Fields().ByName("signed_vote_response")
	fd_Message_sign_proposal_request = md_Message.Fields().ByName("sign_proposal_request")
	fd_Message_signed_proposal_response = md_Message.Fields().ByName("signed_proposal_response")
	fd_Message_ping_request = md_Message.Fields().ByName("ping_request")
	fd_Message_ping_response = md_Message.Fields().ByName("ping_response")
	fd_Message_vrf_proof_request = md_Message.Fields().ByName("vrf_proof_request")
	fd_Message_vrf_proof_response = md_Message.Fields().ByName("vrf_proof_response")
}

var _ protoreflect.Message = (*fastReflection_Message)(nil)

type fastReflection_Message Message

func (x *Message) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Message)(x)
}

func (x *Message) slowProtoReflect() protoreflect.Message {
	mi := &file_ostracon_privval_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Message_messageType fastReflection_Message_messageType
var _ protoreflect.MessageType = fastReflection_Message_messageType{}

type fastReflection_Message_messageType struct{}

func (x fastReflection_Message_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Message)(nil)
}
func (x fastReflection_Message_messageType) New() protoreflect.Message {
	return new(fastReflection_Message)
}
func (x fastReflection_Message_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Message
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Message) Descriptor() protoreflect.MessageDescriptor {
	return md_Message
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Message) Type() protoreflect.MessageType {
	return _fastReflection_Message_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Message) New() protoreflect.Message {
	return new(fastReflection_Message)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Message) Interface() protoreflect.ProtoMessage {
	return (*Message)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Message) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sum != nil {
		switch o := x.Sum.(type) {
		case *Message_PubKeyRequest:
			v := o.PubKeyRequest
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_pub_key_request, value) {
				return
			}
		case *Message_PubKeyResponse:
			v := o.PubKeyResponse
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_pub_key_response, value) {
				return
			}
		case *Message_SignVoteRequest:
			v := o.SignVoteRequest
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_sign_vote_request, value) {
				return
			}
		case *Message_SignedVoteResponse:
			v := o.SignedVoteResponse
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_signed_vote_response, value) {
				return
			}
		case *Message_SignProposalRequest:
			v := o.SignProposalRequest
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_sign_proposal_request, value) {
				return
			}
		case *Message_SignedProposalResponse:
			v := o.SignedProposalResponse
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_signed_proposal_response, value) {
				return
			}
		case *Message_PingRequest:
			v := o.PingRequest
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_ping_request, value) {
				return
			}
		case *Message_PingResponse:
			v := o.PingResponse
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_ping_response, value) {
				return
			}
		case *Message_VrfProofRequest:
			v := o.VrfProofRequest
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_vrf_proof_request, value) {
				return
			}
		case *Message_VrfProofResponse:
			v := o.VrfProofResponse
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Message_vrf_proof_response, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Message) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_PubKeyRequest); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.pub_key_response":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_PubKeyResponse); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.sign_vote_request":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_SignVoteRequest); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.signed_vote_response":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_SignedVoteResponse); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.sign_proposal_request":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_SignProposalRequest); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.signed_proposal_response":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_SignedProposalResponse); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.ping_request":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_PingRequest); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.ping_response":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_PingResponse); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.vrf_proof_request":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_VrfProofRequest); ok {
			return true
		} else {
			return false
		}
	case "ostracon.privval.Message.vrf_proof_response":
		if x.Sum == nil {
			return false
		} else if _, ok := x.Sum.(*Message_VrfProofResponse); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Message) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		x.Sum = nil
	case "ostracon.privval.Message.pub_key_response":
		x.Sum = nil
	case "ostracon.privval.Message.sign_vote_request":
		x.Sum = nil
	case "ostracon.privval.Message.signed_vote_response":
		x.Sum = nil
	case "ostracon.privval.Message.sign_proposal_request":
		x.Sum = nil
	case "ostracon.privval.Message.signed_proposal_response":
		x.Sum = nil
	case "ostracon.privval.Message.ping_request":
		x.Sum = nil
	case "ostracon.privval.Message.ping_response":
		x.Sum = nil
	case "ostracon.privval.Message.vrf_proof_request":
		x.Sum = nil
	case "ostracon.privval.Message.vrf_proof_response":
		x.Sum = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Message) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.PubKeyRequest)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_PubKeyRequest); ok {
			return protoreflect.ValueOfMessage(v.PubKeyRequest.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.PubKeyRequest)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.pub_key_response":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.PubKeyResponse)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_PubKeyResponse); ok {
			return protoreflect.ValueOfMessage(v.PubKeyResponse.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.PubKeyResponse)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.sign_vote_request":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.SignVoteRequest)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_SignVoteRequest); ok {
			return protoreflect.ValueOfMessage(v.SignVoteRequest.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.SignVoteRequest)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.signed_vote_response":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.SignedVoteResponse)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_SignedVoteResponse); ok {
			return protoreflect.ValueOfMessage(v.SignedVoteResponse.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.SignedVoteResponse)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.sign_proposal_request":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.SignProposalRequest)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_SignProposalRequest); ok {
			return protoreflect.ValueOfMessage(v.SignProposalRequest.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.SignProposalRequest)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.signed_proposal_response":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.SignedProposalResponse)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_SignedProposalResponse); ok {
			return protoreflect.ValueOfMessage(v.SignedProposalResponse.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.SignedProposalResponse)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.ping_request":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.PingRequest)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_PingRequest); ok {
			return protoreflect.ValueOfMessage(v.PingRequest.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.PingRequest)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.ping_response":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*privval.PingResponse)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_PingResponse); ok {
			return protoreflect.ValueOfMessage(v.PingResponse.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*privval.PingResponse)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.vrf_proof_request":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*VRFProofRequest)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_VrfProofRequest); ok {
			return protoreflect.ValueOfMessage(v.VrfProofRequest.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*VRFProofRequest)(nil).ProtoReflect())
		}
	case "ostracon.privval.Message.vrf_proof_response":
		if x.Sum == nil {
			return protoreflect.ValueOfMessage((*VRFProofResponse)(nil).ProtoReflect())
		} else if v, ok := x.Sum.(*Message_VrfProofResponse); ok {
			return protoreflect.ValueOfMessage(v.VrfProofResponse.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*VRFProofResponse)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Message) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		cv := value.Message().Interface().(*privval.PubKeyRequest)
		x.Sum = &Message_PubKeyRequest{PubKeyRequest: cv}
	case "ostracon.privval.Message.pub_key_response":
		cv := value.Message().Interface().(*privval.PubKeyResponse)
		x.Sum = &Message_PubKeyResponse{PubKeyResponse: cv}
	case "ostracon.privval.Message.sign_vote_request":
		cv := value.Message().Interface().(*privval.SignVoteRequest)
		x.Sum = &Message_SignVoteRequest{SignVoteRequest: cv}
	case "ostracon.privval.Message.signed_vote_response":
		cv := value.Message().Interface().(*privval.SignedVoteResponse)
		x.Sum = &Message_SignedVoteResponse{SignedVoteResponse: cv}
	case "ostracon.privval.Message.sign_proposal_request":
		cv := value.Message().Interface().(*privval.SignProposalRequest)
		x.Sum = &Message_SignProposalRequest{SignProposalRequest: cv}
	case "ostracon.privval.Message.signed_proposal_response":
		cv := value.Message().Interface().(*privval.SignedProposalResponse)
		x.Sum = &Message_SignedProposalResponse{SignedProposalResponse: cv}
	case "ostracon.privval.Message.ping_request":
		cv := value.Message().Interface().(*privval.PingRequest)
		x.Sum = &Message_PingRequest{PingRequest: cv}
	case "ostracon.privval.Message.ping_response":
		cv := value.Message().Interface().(*privval.PingResponse)
		x.Sum = &Message_PingResponse{PingResponse: cv}
	case "ostracon.privval.Message.vrf_proof_request":
		cv := value.Message().Interface().(*VRFProofRequest)
		x.Sum = &Message_VrfProofRequest{VrfProofRequest: cv}
	case "ostracon.privval.Message.vrf_proof_response":
		cv := value.Message().Interface().(*VRFProofResponse)
		x.Sum = &Message_VrfProofResponse{VrfProofResponse: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Message) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		if x.Sum == nil {
			value := &privval.PubKeyRequest{}
			oneofValue := &Message_PubKeyRequest{PubKeyRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_PubKeyRequest:
			return protoreflect.ValueOfMessage(m.PubKeyRequest.ProtoReflect())
		default:
			value := &privval.PubKeyRequest{}
			oneofValue := &Message_PubKeyRequest{PubKeyRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.pub_key_response":
		if x.Sum == nil {
			value := &privval.PubKeyResponse{}
			oneofValue := &Message_PubKeyResponse{PubKeyResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_PubKeyResponse:
			return protoreflect.ValueOfMessage(m.PubKeyResponse.ProtoReflect())
		default:
			value := &privval.PubKeyResponse{}
			oneofValue := &Message_PubKeyResponse{PubKeyResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.sign_vote_request":
		if x.Sum == nil {
			value := &privval.SignVoteRequest{}
			oneofValue := &Message_SignVoteRequest{SignVoteRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_SignVoteRequest:
			return protoreflect.ValueOfMessage(m.SignVoteRequest.ProtoReflect())
		default:
			value := &privval.SignVoteRequest{}
			oneofValue := &Message_SignVoteRequest{SignVoteRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.signed_vote_response":
		if x.Sum == nil {
			value := &privval.SignedVoteResponse{}
			oneofValue := &Message_SignedVoteResponse{SignedVoteResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_SignedVoteResponse:
			return protoreflect.ValueOfMessage(m.SignedVoteResponse.ProtoReflect())
		default:
			value := &privval.SignedVoteResponse{}
			oneofValue := &Message_SignedVoteResponse{SignedVoteResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.sign_proposal_request":
		if x.Sum == nil {
			value := &privval.SignProposalRequest{}
			oneofValue := &Message_SignProposalRequest{SignProposalRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_SignProposalRequest:
			return protoreflect.ValueOfMessage(m.SignProposalRequest.ProtoReflect())
		default:
			value := &privval.SignProposalRequest{}
			oneofValue := &Message_SignProposalRequest{SignProposalRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.signed_proposal_response":
		if x.Sum == nil {
			value := &privval.SignedProposalResponse{}
			oneofValue := &Message_SignedProposalResponse{SignedProposalResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_SignedProposalResponse:
			return protoreflect.ValueOfMessage(m.SignedProposalResponse.ProtoReflect())
		default:
			value := &privval.SignedProposalResponse{}
			oneofValue := &Message_SignedProposalResponse{SignedProposalResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.ping_request":
		if x.Sum == nil {
			value := &privval.PingRequest{}
			oneofValue := &Message_PingRequest{PingRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_PingRequest:
			return protoreflect.ValueOfMessage(m.PingRequest.ProtoReflect())
		default:
			value := &privval.PingRequest{}
			oneofValue := &Message_PingRequest{PingRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.ping_response":
		if x.Sum == nil {
			value := &privval.PingResponse{}
			oneofValue := &Message_PingResponse{PingResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_PingResponse:
			return protoreflect.ValueOfMessage(m.PingResponse.ProtoReflect())
		default:
			value := &privval.PingResponse{}
			oneofValue := &Message_PingResponse{PingResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.vrf_proof_request":
		if x.Sum == nil {
			value := &VRFProofRequest{}
			oneofValue := &Message_VrfProofRequest{VrfProofRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_VrfProofRequest:
			return protoreflect.ValueOfMessage(m.VrfProofRequest.ProtoReflect())
		default:
			value := &VRFProofRequest{}
			oneofValue := &Message_VrfProofRequest{VrfProofRequest: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "ostracon.privval.Message.vrf_proof_response":
		if x.Sum == nil {
			value := &VRFProofResponse{}
			oneofValue := &Message_VrfProofResponse{VrfProofResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Sum.(type) {
		case *Message_VrfProofResponse:
			return protoreflect.ValueOfMessage(m.VrfProofResponse.ProtoReflect())
		default:
			value := &VRFProofResponse{}
			oneofValue := &Message_VrfProofResponse{VrfProofResponse: value}
			x.Sum = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Message) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ostracon.privval.Message.pub_key_request":
		value := &privval.PubKeyRequest{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.pub_key_response":
		value := &privval.PubKeyResponse{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.sign_vote_request":
		value := &privval.SignVoteRequest{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.signed_vote_response":
		value := &privval.SignedVoteResponse{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.sign_proposal_request":
		value := &privval.SignProposalRequest{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.signed_proposal_response":
		value := &privval.SignedProposalResponse{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.ping_request":
		value := &privval.PingRequest{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.ping_response":
		value := &privval.PingResponse{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.vrf_proof_request":
		value := &VRFProofRequest{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ostracon.privval.Message.vrf_proof_response":
		value := &VRFProofResponse{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ostracon.privval.Message"))
		}
		panic(fmt.Errorf("message ostracon.privval.Message does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Message) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "ostracon.privval.Message.sum":
		if x.Sum == nil {
			return nil
		}
		switch x.Sum.(type) {
		case *Message_PubKeyRequest:
			return x.Descriptor().Fields().ByName("pub_key_request")
		case *Message_PubKeyResponse:
			return x.Descriptor().Fields().ByName("pub_key_response")
		case *Message_SignVoteRequest:
			return x.Descriptor().Fields().ByName("sign_vote_request")
		case *Message_SignedVoteResponse:
			return x.Descriptor().Fields().ByName("signed_vote_response")
		case *Message_SignProposalRequest:
			return x.Descriptor().Fields().ByName("sign_proposal_request")
		case *Message_SignedProposalResponse:
			return x.Descriptor().Fields().ByName("signed_proposal_response")
		case *Message_PingRequest:
			return x.Descriptor().Fields().ByName("ping_request")
		case *Message_PingResponse:
			return x.Descriptor().Fields().ByName("ping_response")
		case *Message_VrfProofRequest:
			return x.Descriptor().Fields().ByName("vrf_proof_request")
		case *Message_VrfProofResponse:
			return x.Descriptor().Fields().ByName("vrf_proof_response")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in ostracon.privval.Message", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Message) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Message) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Message) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Message) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Message)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		switch x := x.Sum.(type) {
		case *Message_PubKeyRequest:
			if x == nil {
				break
			}
			l = options.Size(x.PubKeyRequest)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_PubKeyResponse:
			if x == nil {
				break
			}
			l = options.Size(x.PubKeyResponse)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_SignVoteRequest:
			if x == nil {
				break
			}
			l = options.Size(x.SignVoteRequest)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_SignedVoteResponse:
			if x == nil {
				break
			}
			l = options.Size(x.SignedVoteResponse)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_SignProposalRequest:
			if x == nil {
				break
			}
			l = options.Size(x.SignProposalRequest)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_SignedProposalResponse:
			if x == nil {
				break
			}
			l = options.Size(x.SignedProposalResponse)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_PingRequest:
			if x == nil {
				break
			}
			l = options.Size(x.PingRequest)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_PingResponse:
			if x == nil {
				break
			}
			l = options.Size(x.PingResponse)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Message_VrfProofRequest:
			if x == nil {
				break
			}
			l = options.Size(x.VrfProofRequest)
			n += 2 + l + runtime.Sov(uint64(l))
		case *Message_VrfProofResponse:
			if x == nil {
				break
			}
			l = options.Size(x.VrfProofResponse)
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Message)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Sum.(type) {
		case *Message_PubKeyRequest:
			encoded, err := options.Marshal(x.PubKeyRequest)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		case *Message_PubKeyResponse:
			encoded, err := options.Marshal(x.PubKeyResponse)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		case *Message_SignVoteRequest:
			encoded, err := options.Marshal(x.SignVoteRequest)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		case *Message_SignedVoteResponse:
			encoded, err := options.Marshal(x.SignedVoteResponse)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		case *Message_SignProposalRequest:
			encoded, err := options.Marshal(x.SignProposalRequest)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		case *Message_SignedProposalResponse:
			encoded, err := options.Marshal(x.SignedProposalResponse)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		case *Message_PingRequest:
			encoded, err := options.Marshal(x.PingRequest)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		case *Message_PingResponse:
			encoded, err := options.Marshal(x.PingResponse)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		case *Message_VrfProofRequest:
			encoded, err := options.Marshal(x.VrfProofRequest)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xc2
		case *Message_VrfProofResponse:
			encoded, err := options.Marshal(x.VrfProofResponse)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3e
			i--
			dAtA[i] = 0xca
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Message)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Message: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Message: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKeyRequest", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.PubKeyRequest{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_PubKeyRequest{v}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKeyResponse", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.PubKeyResponse{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_PubKeyResponse{v}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignVoteRequest", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.SignVoteRequest{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_SignVoteRequest{v}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedVoteResponse", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.SignedVoteResponse{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_SignedVoteResponse{v}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignProposalRequest", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.SignProposalRequest{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_SignProposalRequest{v}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedProposalResponse", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.SignedProposalResponse{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_SignedProposalResponse{v}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PingRequest", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.PingRequest{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_PingRequest{v}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PingResponse", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &privval.PingResponse{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_PingResponse{v}
				iNdEx = postIndex
			case 1000:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VrfProofRequest", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &VRFProofRequest{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_VrfProofRequest{v}
				iNdEx = postIndex
			case 1001:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VrfProofResponse", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &VRFProofResponse{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Sum = &Message_VrfProofResponse{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ostracon/privval/types.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VRFProofRequest is a PrivValidatorSocket message containing a message to generate proof.
type VRFProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VRFProofRequest) Reset() {
	*x = VRFProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ostracon_privval_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VRFProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VRFProofRequest) ProtoMessage() {}

// Deprecated: Use VRFProofRequest.ProtoReflect.Descriptor instead.
func (*VRFProofRequest) Descriptor() ([]byte, []int) {
	return file_ostracon_privval_types_proto_rawDescGZIP(), []int{0}
}

func (x *VRFProofRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

// VRFProofResponse is a PrivValidatorSocket message containing a Proof.
type VRFProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof []byte                     `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Error *privval.RemoteSignerError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *VRFProofResponse) Reset() {
	*x = VRFProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ostracon_privval_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VRFProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VRFProofResponse) ProtoMessage() {}

// Deprecated: Use VRFProofResponse.ProtoReflect.Descriptor instead.
func (*VRFProofResponse) Descriptor() ([]byte, []int) {
	return file_ostracon_privval_types_proto_rawDescGZIP(), []int{1}
}

func (x *VRFProofResponse) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *VRFProofResponse) GetError() *privval.RemoteSignerError {
	if x != nil {
		return x.Error
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sum:
	//
	//	*Message_PubKeyRequest
	//	*Message_PubKeyResponse
	//	*Message_SignVoteRequest
	//	*Message_SignedVoteResponse
	//	*Message_SignProposalRequest
	//	*Message_SignedProposalResponse
	//	*Message_PingRequest
	//	*Message_PingResponse
	//	*Message_VrfProofRequest
	//	*Message_VrfProofResponse
	Sum isMessage_Sum `protobuf_oneof:"sum"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ostracon_privval_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ostracon_privval_types_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetSum() isMessage_Sum {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *Message) GetPubKeyRequest() *privval.PubKeyRequest {
	if x, ok := x.GetSum().(*Message_PubKeyRequest); ok {
		return x.PubKeyRequest
	}
	return nil
}

func (x *Message) GetPubKeyResponse() *privval.PubKeyResponse {
	if x, ok := x.GetSum().(*Message_PubKeyResponse); ok {
		return x.PubKeyResponse
	}
	return nil
}

func (x *Message) GetSignVoteRequest() *privval.SignVoteRequest {
	if x, ok := x.GetSum().(*Message_SignVoteRequest); ok {
		return x.SignVoteRequest
	}
	return nil
}

func (x *Message) GetSignedVoteResponse() *privval.SignedVoteResponse {
	if x, ok := x.GetSum().(*Message_SignedVoteResponse); ok {
		return x.SignedVoteResponse
	}
	return nil
}

func (x *Message) GetSignProposalRequest() *privval.SignProposalRequest {
	if x, ok := x.GetSum().(*Message_SignProposalRequest); ok {
		return x.SignProposalRequest
	}
	return nil
}

func (x *Message) GetSignedProposalResponse() *privval.SignedProposalResponse {
	if x, ok := x.GetSum().(*Message_SignedProposalResponse); ok {
		return x.SignedProposalResponse
	}
	return nil
}

func (x *Message) GetPingRequest() *privval.PingRequest {
	if x, ok := x.GetSum().(*Message_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

func (x *Message) GetPingResponse() *privval.PingResponse {
	if x, ok := x.GetSum().(*Message_PingResponse); ok {
		return x.PingResponse
	}
	return nil
}

func (x *Message) GetVrfProofRequest() *VRFProofRequest {
	if x, ok := x.GetSum().(*Message_VrfProofRequest); ok {
		return x.VrfProofRequest
	}
	return nil
}

func (x *Message) GetVrfProofResponse() *VRFProofResponse {
	if x, ok := x.GetSum().(*Message_VrfProofResponse); ok {
		return x.VrfProofResponse
	}
	return nil
}

type isMessage_Sum interface {
	isMessage_Sum()
}

type Message_PubKeyRequest struct {
	PubKeyRequest *privval.PubKeyRequest `protobuf:"bytes,1,opt,name=pub_key_request,json=pubKeyRequest,proto3,oneof"`
}

type Message_PubKeyResponse struct {
	PubKeyResponse *privval.PubKeyResponse `protobuf:"bytes,2,opt,name=pub_key_response,json=pubKeyResponse,proto3,oneof"`
}

type Message_SignVoteRequest struct {
	SignVoteRequest *privval.SignVoteRequest `protobuf:"bytes,3,opt,name=sign_vote_request,json=signVoteRequest,proto3,oneof"`
}

type Message_SignedVoteResponse struct {
	SignedVoteResponse *privval.SignedVoteResponse `protobuf:"bytes,4,opt,name=signed_vote_response,json=signedVoteResponse,proto3,oneof"`
}

type Message_SignProposalRequest struct {
	SignProposalRequest *privval.SignProposalRequest `protobuf:"bytes,5,opt,name=sign_proposal_request,json=signProposalRequest,proto3,oneof"`
}

type Message_SignedProposalResponse struct {
	SignedProposalResponse *privval.SignedProposalResponse `protobuf:"bytes,6,opt,name=signed_proposal_response,json=signedProposalResponse,proto3,oneof"`
}

type Message_PingRequest struct {
	PingRequest *privval.PingRequest `protobuf:"bytes,7,opt,name=ping_request,json=pingRequest,proto3,oneof"`
}

type Message_PingResponse struct {
	PingResponse *privval.PingResponse `protobuf:"bytes,8,opt,name=ping_response,json=pingResponse,proto3,oneof"`
}

type Message_VrfProofRequest struct {
	VrfProofRequest *VRFProofRequest `protobuf:"bytes,1000,opt,name=vrf_proof_request,json=vrfProofRequest,proto3,oneof"`
}

type Message_VrfProofResponse struct {
	VrfProofResponse *VRFProofResponse `protobuf:"bytes,1001,opt,name=vrf_proof_response,json=vrfProofResponse,proto3,oneof"`
}

func (*Message_PubKeyRequest) isMessage_Sum() {}

func (*Message_PubKeyResponse) isMessage_Sum() {}

func (*Message_SignVoteRequest) isMessage_Sum() {}

func (*Message_SignedVoteResponse) isMessage_Sum() {}

func (*Message_SignProposalRequest) isMessage_Sum() {}

func (*Message_SignedProposalResponse) isMessage_Sum() {}

func (*Message_PingRequest) isMessage_Sum() {}

func (*Message_PingResponse) isMessage_Sum() {}

func (*Message_VrfProofRequest) isMessage_Sum() {}

func (*Message_VrfProofResponse) isMessage_Sum() {}

var File_ostracon_privval_types_proto protoreflect.FileDescriptor

var file_ostracon_privval_types_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x76,
	0x61, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c,
	0x1a, 0x1e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x76, 0x61, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x52, 0x46, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a,
	0x10, 0x56, 0x52, 0x46, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xd9, 0x06, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a,
	0x10, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x11, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x76, 0x61, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x15,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x18, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76,
	0x61, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x76, 0x61, 0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x76, 0x72, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61,
	0x6c, 0x2e, 0x56, 0x52, 0x46, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0f, 0x76, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x76, 0x72, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x76, 0x61, 0x6c, 0x2e, 0x56, 0x52, 0x46, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x76, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x6d,
	0x42, 0xba, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x69, 0x6e, 0x73, 0x63, 0x68, 0x69, 0x61, 0x2f, 0x66, 0x69, 0x6e,
	0x73, 0x63, 0x68, 0x69, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0xa2, 0x02,
	0x03, 0x4f, 0x50, 0x58, 0xaa, 0x02, 0x10, 0x4f, 0x73, 0x74, 0x72, 0x61, 0x63, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0xca, 0x02, 0x10, 0x4f, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0xe2, 0x02, 0x1c, 0x4f, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x4f, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x6f, 0x6e, 0x3a, 0x3a, 0x50, 0x72, 0x69, 0x76, 0x76, 0x61, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ostracon_privval_types_proto_rawDescOnce sync.Once
	file_ostracon_privval_types_proto_rawDescData = file_ostracon_privval_types_proto_rawDesc
)

func file_ostracon_privval_types_proto_rawDescGZIP() []byte {
	file_ostracon_privval_types_proto_rawDescOnce.Do(func() {
		file_ostracon_privval_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_ostracon_privval_types_proto_rawDescData)
	})
	return file_ostracon_privval_types_proto_rawDescData
}

var file_ostracon_privval_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ostracon_privval_types_proto_goTypes = []interface{}{
	(*VRFProofRequest)(nil),                // 0: ostracon.privval.VRFProofRequest
	(*VRFProofResponse)(nil),               // 1: ostracon.privval.VRFProofResponse
	(*Message)(nil),                        // 2: ostracon.privval.Message
	(*privval.RemoteSignerError)(nil),      // 3: tendermint.privval.RemoteSignerError
	(*privval.PubKeyRequest)(nil),          // 4: tendermint.privval.PubKeyRequest
	(*privval.PubKeyResponse)(nil),         // 5: tendermint.privval.PubKeyResponse
	(*privval.SignVoteRequest)(nil),        // 6: tendermint.privval.SignVoteRequest
	(*privval.SignedVoteResponse)(nil),     // 7: tendermint.privval.SignedVoteResponse
	(*privval.SignProposalRequest)(nil),    // 8: tendermint.privval.SignProposalRequest
	(*privval.SignedProposalResponse)(nil), // 9: tendermint.privval.SignedProposalResponse
	(*privval.PingRequest)(nil),            // 10: tendermint.privval.PingRequest
	(*privval.PingResponse)(nil),           // 11: tendermint.privval.PingResponse
}
var file_ostracon_privval_types_proto_depIdxs = []int32{
	3,  // 0: ostracon.privval.VRFProofResponse.error:type_name -> tendermint.privval.RemoteSignerError
	4,  // 1: ostracon.privval.Message.pub_key_request:type_name -> tendermint.privval.PubKeyRequest
	5,  // 2: ostracon.privval.Message.pub_key_response:type_name -> tendermint.privval.PubKeyResponse
	6,  // 3: ostracon.privval.Message.sign_vote_request:type_name -> tendermint.privval.SignVoteRequest
	7,  // 4: ostracon.privval.Message.signed_vote_response:type_name -> tendermint.privval.SignedVoteResponse
	8,  // 5: ostracon.privval.Message.sign_proposal_request:type_name -> tendermint.privval.SignProposalRequest
	9,  // 6: ostracon.privval.Message.signed_proposal_response:type_name -> tendermint.privval.SignedProposalResponse
	10, // 7: ostracon.privval.Message.ping_request:type_name -> tendermint.privval.PingRequest
	11, // 8: ostracon.privval.Message.ping_response:type_name -> tendermint.privval.PingResponse
	0,  // 9: ostracon.privval.Message.vrf_proof_request:type_name -> ostracon.privval.VRFProofRequest
	1,  // 10: ostracon.privval.Message.vrf_proof_response:type_name -> ostracon.privval.VRFProofResponse
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_ostracon_privval_types_proto_init() }
func file_ostracon_privval_types_proto_init() {
	if File_ostracon_privval_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ostracon_privval_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VRFProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ostracon_privval_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VRFProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ostracon_privval_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ostracon_privval_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Message_PubKeyRequest)(nil),
		(*Message_PubKeyResponse)(nil),
		(*Message_SignVoteRequest)(nil),
		(*Message_SignedVoteResponse)(nil),
		(*Message_SignProposalRequest)(nil),
		(*Message_SignedProposalResponse)(nil),
		(*Message_PingRequest)(nil),
		(*Message_PingResponse)(nil),
		(*Message_VrfProofRequest)(nil),
		(*Message_VrfProofResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ostracon_privval_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ostracon_privval_types_proto_goTypes,
		DependencyIndexes: file_ostracon_privval_types_proto_depIdxs,
		MessageInfos:      file_ostracon_privval_types_proto_msgTypes,
	}.Build()
	File_ostracon_privval_types_proto = out.File
	file_ostracon_privval_types_proto_rawDesc = nil
	file_ostracon_privval_types_proto_goTypes = nil
	file_ostracon_privval_types_proto_depIdxs = nil
}
