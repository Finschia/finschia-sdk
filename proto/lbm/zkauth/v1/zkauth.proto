syntax = "proto3";
package lbm.zkauth.v1;

import "cosmos_proto/cosmos.proto";
import "cosmos/crypto/secp256k1/keys.proto";
import "cosmos/auth/v1beta1/auth.proto";

import "gogoproto/gogo.proto";

option go_package = "github.com/Finschia/finschia-sdk/x/zkauth/types";

// ZKAuthAccount is an Account generated by ZKAuth. 
// It conforms to the BaseAccount interface, but pubkey is not present and returns nil.
message ZKAuthAccount {
    option (gogoproto.goproto_getters)         = false;
    option (gogoproto.equal)                   = false;
    option (cosmos_proto.implements_interface) = "cosmos.auth.v1beta1.AccountI";
  
    string address        = 1;
    uint64 account_number = 2;
    uint64 sequence       = 3;
}

// ZKAuthInputs is a parameter required for zkp verify. 
// Contains the values needed to calculate "all inputs hash".
message ZKAuthInputs {
    bytes proof_points = 1;
    Claim iss_base64_details = 2;
    string header_base64 = 3;
    string address_seed = 4;
}

message Claim {
    string value = 1;
    uint32 index_mod_4 = 2;
}

message JWTDetails {
    string kid = 1;
    string header = 2;
    string iss = 3;
}
