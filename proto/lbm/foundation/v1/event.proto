syntax = "proto3";
package lbm.foundation.v1;

option go_package = "github.com/line/lbm-sdk/x/foundation";

import "gogoproto/gogo.proto";

import "lbm/foundation/v1/foundation.proto";

// EventUpdateFoundationParams is emitted after updating foundation parameters.
message EventUpdateFoundationParams {
  Params params = 1;
}

// EventUpdateValidatorAuths is emitted after updating validator auth info.
message EventUpdateValidatorAuths {
  repeated ValidatorAuth auths = 1 [(gogoproto.nullable) = false];
}

// EventSubmitProposal is an event emitted when a proposal is created.
message EventSubmitProposal {
  // proposal_id is the unique ID of the proposal.
  uint64 proposal_id = 1;
}

// EventWithdrawProposal is an event emitted when a proposal is withdrawn.
message EventWithdrawProposal {
  // proposal_id is the unique ID of the proposal.
  uint64 proposal_id = 1;
}

// EventVote is an event emitted when a voter votes on a proposal.
message EventVote {
  // proposal_id is the unique ID of the proposal.
  uint64 proposal_id = 1;
  string voter = 2;
}

// EventExec is an event emitted when a proposal is executed.
message EventExec {
  // proposal_id is the unique ID of the proposal.
  uint64 proposal_id = 1;

  // result is the proposal execution result.
  ProposalExecutorResult result = 2;
}

// EventLeaveFoundation is an event emitted when a foundation member leaves the foundation.
message EventLeaveFoundation {
  // address is the account address of the foundation member.
  string address = 1;
}
