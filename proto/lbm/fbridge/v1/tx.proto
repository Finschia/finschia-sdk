syntax = "proto3";
package lbm.fbridge.v1;

option go_package = "github.com/Finschia/finschia-sdk/x/fbridge/types";

import "gogoproto/gogo.proto";
import "lbm/fbridge/v1/fbridge.proto";

service Msg {
  // Submit a transfer request to the bridge module.
  rpc Transfer(MsgTransfer) returns (MsgTransferResponse);

  // Submit a provision to the bridge module.
  rpc Provision(MsgProvision) returns (MsgProvisionResponse);

  // Set the time lock value from default value to uint64.max for specific confirmed provision.
  rpc HoldTransfer(MsgHoldTransfer) returns (MsgHoldTransferResponse);

  // Set the time lock value to 0 for specific confirmed provision.
  rpc ReleaseTransfer(MsgReleaseTransfer) returns (MsgReleaseTransferResponse);

  // Remove a specific confirmed provision (reset for specific sequence number).
  rpc RemoveProvision(MsgRemoveProvision) returns (MsgRemoveProvisionResponse);

  // ClaimBatch processes the claiming of multiple claimable provisions in a single operation
  rpc ClaimBatch(MsgClaimBatch) returns (MsgClaimBatchResponse);

  // Claim processes the claiming of a provision with a specific sequence number
  rpc Claim(MsgClaim) returns (MsgClaimResponse);

  // UpdateRole updates the role of an address in the bridge module.
  // The role can be one of the following: guardian, operator, judge.
  rpc UpdateRole(MsgUpdateRole) returns (MsgUpdateRoleResponse);
}

// MsgTransfer is input values required for bridge transfer
message MsgTransfer {
  // the sender address on the source chain
  string sender = 1;
  // the recipient address on the destination chain
  string receiver = 2;
  // the amount of token to be transferred
  string amount = 3
      [(gogoproto.customtype) = "github.com/Finschia/finschia-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgTransferResponse {}

// MsgProvision is input values required for provisioning
message MsgProvision {
  // the sequence number of the bridge request
  uint64 seq = 1;
  // the sender address on the source chain
  string sender = 2;
  // the recipient address on the destination chain
  string receiver = 3;
  // the amount of token to be claimed
  string amount = 4
      [(gogoproto.customtype) = "github.com/Finschia/finschia-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgProvisionResponse {}

// MsgHoldTransfer is input values required for holding transfer
message MsgHoldTransfer {
  // the sequence number of the bridge request
  uint64 seq = 1;
}

message MsgHoldTransferResponse {}

// MsgReleaseTransfer is input values required for releasing a held transfer by time lock
message MsgReleaseTransfer {
  // the sequence number of the bridge request
  uint64 seq = 1;
}

message MsgReleaseTransferResponse {}

// MsgRemoveProvision is input values required for removing a specific confirmed provision
message MsgRemoveProvision {
  // the sequence number of the bridge request
  uint64 seq = 1;
}

message MsgRemoveProvisionResponse {}

// MsgClaimBatch is input values required for claiming multiple claimable provisions
message MsgClaimBatch {
  // the maximum number of claims to be made at once
  uint64 max_claims = 1;
}

message MsgClaimBatchResponse {}

// MsgClaim is input values required for claiming a provision
message MsgClaim {
  // the sequence number of the bridge request
  uint64 seq = 1;
}

message MsgClaimResponse {}

// MsgUpdateRole is input values required for updating the role of an address
message MsgUpdateRole {
  // the address to update the role
  string address = 1;
  // the role to be updated
  // - unspecified : 0, used to remove the address from a group
  // - guardian : 1
  // - operator : 2
  // - judge : 3
  Role role = 2;
}

message MsgUpdateRoleResponse {}