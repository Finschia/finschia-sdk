syntax = "proto3";
package lbm.fbridge.v1;

option go_package = "github.com/Finschia/finschia-sdk/x/fbridge/types";

import "gogoproto/gogo.proto";
import "lbm/fbridge/v1/fbridge.proto";

// GenesisState defines the fbridge module's genesis state.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
  // sending_state defines status saved when sending tokens to a counterpart chain
  SendingState sending_state = 2 [(gogoproto.nullable) = false];
  // receiving_state defines status saved when receiving tokens from a counterpart chain
  ReceivingState receiving_state = 3 [(gogoproto.nullable) = false];
}

message SendingState {
  option (gogoproto.goproto_getters) = false;

  // the next sequence number of the bridge request (greatest sequence number + 1)
  uint64 next_seq = 1;
  // sequence-per-block number mapping
  repeated BlockSeqInfo seq_to_blocknum = 2;
}

message BlockSeqInfo {
  uint64 seq      = 1;
  uint64 blocknum = 2;
}

message ReceivingState {
  option (gogoproto.goproto_getters) = false;

  // the greatest sequence number confirmed by each operator
  repeated OperatorSeqInfo greatest_seq_per_operator = 1;
  // the next sequence numbers to confirm. (next_seq_to_confirm - 1) is confirmed by n-of-m operators
  uint64 next_seq_to_confirm = 2;
  // the next sequence numbers confirmed by n-of-m operators that have not been claimed yet
  uint64 next_seq_to_claim = 3;
  // commitment is the hash value of a specific provision.
  repeated Commitment commitments = 4;
  // provision associated with a specific commitment.
  repeated Provision provisions = 5;
  // map the sequence number confirmed by n-of-m operators with commitment
  repeated ConfirmedProvision confirmed_seq_to_commitment = 7;
}

message OperatorSeqInfo {
  // the operator address
  string operator = 1;
  // the greatest sequence number confirmed by the operator
  uint64 greatest_seq = 2;
}

message Commitment {
  // the operator address
  string operator = 1;
  // the sequence number of the bridge request
  uint64 seq = 2;
  // commitment is the hash value of a provision
  string commitment = 3;
}

message Provision {
  string          commitment = 1;
  ProvisionData   data       = 2;
  ProvisionStatus status     = 3;
}

message ConfirmedProvision {
  // the sequence number of the bridge request
  uint64 seq = 1;

  // commitment is the hash value of a provision
  string commitment = 2;
}
