syntax = "proto3";
package lbm.wasm.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package                      = "github.com/line/lbm-sdk/x/wasm/lbmtypes";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all)           = false;

// Query defines the gRPC querier service.
service Query {
  // InactiveContracts queries all inactive contracts
  rpc InactiveContracts(QueryInactiveContractsRequest) returns (QueryInactiveContractsResponse) {
    option (google.api.http).get = "/lbm/wasm/v1/inactive_contracts";
  };

  rpc InactiveContract(QueryInactiveContractRequest) returns (QueryInactiveContractResponse) {
    option (google.api.http).get = "/lbm/wasm/v1/inactive_contracts/{address}";
  }
}

// QueryInactiveContractsRequest is the request type for Query/InactiveContract RPC method.
message QueryInactiveContractsRequest {
  // pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryInactiveContractsResponse is the response type for the Query/InactiveContract RPC method.
message QueryInactiveContractsResponse {
  // addresses is the inactive address list
  repeated string addresses = 1;

  // pagination defines the pagination in the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryIsInactiveContractRequest is the request type for Query/IsInactiveContract RPC method.
message QueryInactiveContractRequest {
  // address is the address of the contract
  string address = 1;
}

// QueryInactiveContractsResponse is the response type for the Query/IsInactiveContract RPC method.
message QueryInactiveContractResponse {
  // inactivated is the result if the contract is inactive contract or not
  bool inactivated = 1;
}
