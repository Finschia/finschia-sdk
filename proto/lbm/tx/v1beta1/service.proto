syntax = "proto3";
package lbm.tx.v1beta1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ostracon/types/block.proto";
import "ostracon/types/types.proto";
import "tendermint/types/types.proto";

option (gogoproto.goproto_registration) = true;
option go_package                       = "github.com/Finschia/finschia-sdk/types/tx2";

// Service defines a gRPC service for interacting with transactions.
service Service {
  // GetBlockWithTxs fetches a block with decoded txs.
  //
  // Since: finschia-sdk 0.47.0
  rpc GetBlockWithTxs(GetBlockWithTxsRequest) returns (GetBlockWithTxsResponse) {
    option (google.api.http).get = "/lbm/tx/v1beta1/txs/block/{height}";
  }
}

// GetBlockWithTxsRequest is the request type for the Service.GetBlockWithTxs
// RPC method.
//
// Since: finschia-sdk 0.47.0
message GetBlockWithTxsRequest {
  // height is the height of the block to query.
  int64 height = 1;
  // pagination defines a pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.
//
// Since: finschia-sdk 0.47.0
message GetBlockWithTxsResponse {
  // txs are the transactions in the block.
  repeated cosmos.tx.v1beta1.Tx txs      = 1;
  .tendermint.types.BlockID     block_id = 2;
  .ostracon.types.Block         block    = 3;
  // pagination defines a pagination for the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}
