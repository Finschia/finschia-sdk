syntax = "proto3";
package lbm.consortium.v1;

option go_package = "github.com/line/lbm-sdk/x/consortium";

import "lbm/base/query/v1/pagination.proto";
import "google/api/annotations.proto";
import "lbm/consortium/v1/consortium.proto";

// Query defines the gRPC querier service for consortium module.
service Query {
  // Params queries the module params.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/lbm/consortium/v1/params";
  }

  // ValidatorAuth queries authorization info of a validator.
  rpc ValidatorAuth(QueryValidatorAuthRequest) returns (QueryValidatorAuthResponse) {
    option (google.api.http).get = "/lbm/consortium/v1/validators/{validator_address}";
  }

  // ValidatorAuths queries authorization infos of validators.
  rpc ValidatorAuths(QueryValidatorAuthsRequest) returns (QueryValidatorAuthsResponse) {
    option (google.api.http).get = "/lbm/consortium/v1/validators";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1;
}

// QueryValidatorAuthRequest is the request type for the
// Query/ValidatorAuth RPC method.
message QueryValidatorAuthRequest {
  // validator_address defines the validator address to query for.
  string validator_address = 1;
}

// QueryValidatorAuthResponse is the request type for the
// Query/ValidatorAuth RPC method.
message QueryValidatorAuthResponse {
  ValidatorAuth auth = 1;
}

// QueryValidatorAuthsRequest is the request type for the
// Query/ValidatorAuths RPC method.
message QueryValidatorAuthsRequest {
  // pagination defines an optional pagination for the request.
  lbm.base.query.v1.PageRequest pagination = 1;
}

// QueryValidatorAuthsResponse is the response type for the
// Query/ValidatorAuths RPC method.
message QueryValidatorAuthsResponse {
  repeated ValidatorAuth auths = 1;

  // pagination defines the pagination in the response.
  lbm.base.query.v1.PageResponse pagination = 2;
}
