// Code generated by MockGen. DO NOT EDIT.
// Source: x/stakingplus/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/Finschia/finschia-sdk/types"
)

// MockFoundationKeeper is a mock of FoundationKeeper interface.
type MockFoundationKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockFoundationKeeperMockRecorder
}

// MockFoundationKeeperMockRecorder is the mock recorder for MockFoundationKeeper.
type MockFoundationKeeperMockRecorder struct {
	mock *MockFoundationKeeper
}

// NewMockFoundationKeeper creates a new mock instance.
func NewMockFoundationKeeper(ctrl *gomock.Controller) *MockFoundationKeeper {
	mock := &MockFoundationKeeper{ctrl: ctrl}
	mock.recorder = &MockFoundationKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFoundationKeeper) EXPECT() *MockFoundationKeeperMockRecorder {
	return m.recorder
}

// Accept mocks base method.
func (m *MockFoundationKeeper) Accept(ctx types.Context, grantee types.AccAddress, msg types.Msg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accept", ctx, grantee, msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// Accept indicates an expected call of Accept.
func (mr *MockFoundationKeeperMockRecorder) Accept(ctx, grantee, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accept", reflect.TypeOf((*MockFoundationKeeper)(nil).Accept), ctx, grantee, msg)
}
