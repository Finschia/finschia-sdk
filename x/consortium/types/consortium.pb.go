// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lbm/consortium/v1/consortium.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// DisableConsortiumProposal details a proposal for turning off consortium module.
type DisableConsortiumProposal struct {
	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *DisableConsortiumProposal) Reset()      { *m = DisableConsortiumProposal{} }
func (*DisableConsortiumProposal) ProtoMessage() {}
func (*DisableConsortiumProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff3cd9d46ac10ef2, []int{0}
}
func (m *DisableConsortiumProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DisableConsortiumProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DisableConsortiumProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DisableConsortiumProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableConsortiumProposal.Merge(m, src)
}
func (m *DisableConsortiumProposal) XXX_Size() int {
	return m.Size()
}
func (m *DisableConsortiumProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableConsortiumProposal.DiscardUnknown(m)
}

var xxx_messageInfo_DisableConsortiumProposal proto.InternalMessageInfo

// EditAllowedValidatorsProposal details a proposal for editing allowed validators on consortium.
// If the operator sending `CreateValidator` is not allowed first, corresponding validator
// would be tombstoned.
type EditAllowedValidatorsProposal struct {
	Title             string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description       string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AddingAddresses   []string `protobuf:"bytes,3,rep,name=adding_addresses,json=addingAddresses,proto3" json:"adding_addresses,omitempty" yaml:"adding_addresses"`
	RemovingAddresses []string `protobuf:"bytes,4,rep,name=removing_addresses,json=removingAddresses,proto3" json:"removing_addresses,omitempty" yaml:"removing_addresses"`
}

func (m *EditAllowedValidatorsProposal) Reset()      { *m = EditAllowedValidatorsProposal{} }
func (*EditAllowedValidatorsProposal) ProtoMessage() {}
func (*EditAllowedValidatorsProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff3cd9d46ac10ef2, []int{1}
}
func (m *EditAllowedValidatorsProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditAllowedValidatorsProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditAllowedValidatorsProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditAllowedValidatorsProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditAllowedValidatorsProposal.Merge(m, src)
}
func (m *EditAllowedValidatorsProposal) XXX_Size() int {
	return m.Size()
}
func (m *EditAllowedValidatorsProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_EditAllowedValidatorsProposal.DiscardUnknown(m)
}

var xxx_messageInfo_EditAllowedValidatorsProposal proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DisableConsortiumProposal)(nil), "lbm.consortium.v1.DisableConsortiumProposal")
	proto.RegisterType((*EditAllowedValidatorsProposal)(nil), "lbm.consortium.v1.EditAllowedValidatorsProposal")
}

func init() {
	proto.RegisterFile("lbm/consortium/v1/consortium.proto", fileDescriptor_ff3cd9d46ac10ef2)
}

var fileDescriptor_ff3cd9d46ac10ef2 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xca, 0x49, 0xca, 0xd5,
	0x4f, 0xce, 0xcf, 0x2b, 0xce, 0x2f, 0x2a, 0xc9, 0x2c, 0xcd, 0xd5, 0x2f, 0x33, 0x44, 0xe2, 0xe9,
	0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x09, 0xe6, 0x24, 0xe5, 0xea, 0x21, 0x89, 0x96, 0x19, 0x4a,
	0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0x65, 0xf5, 0x41, 0x2c, 0x88, 0x42, 0xa5, 0x44, 0x2e, 0x49,
	0x97, 0xcc, 0xe2, 0xc4, 0xa4, 0x9c, 0x54, 0x67, 0xb8, 0xea, 0x80, 0xa2, 0xfc, 0x82, 0xfc, 0xe2,
	0xc4, 0x1c, 0x21, 0x11, 0x2e, 0xd6, 0x92, 0xcc, 0x92, 0x9c, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xce, 0x20, 0x08, 0x47, 0x48, 0x81, 0x8b, 0x3b, 0x25, 0xb5, 0x38, 0xb9, 0x28, 0xb3, 0xa0, 0x24,
	0x33, 0x3f, 0x4f, 0x82, 0x09, 0x2c, 0x87, 0x2c, 0x64, 0xc5, 0xd3, 0xb1, 0x40, 0x9e, 0x61, 0xc6,
	0x02, 0x79, 0x86, 0x17, 0x0b, 0xe4, 0x19, 0x94, 0x7e, 0x33, 0x72, 0xc9, 0xba, 0xa6, 0x64, 0x96,
	0x38, 0xe6, 0xe4, 0xe4, 0x97, 0xa7, 0xa6, 0x84, 0x25, 0xe6, 0x64, 0xa6, 0x24, 0x96, 0xe4, 0x17,
	0x15, 0x53, 0x6a, 0x8f, 0x90, 0x1b, 0x97, 0x40, 0x62, 0x4a, 0x4a, 0x66, 0x5e, 0x7a, 0x7c, 0x62,
	0x4a, 0x4a, 0x51, 0x6a, 0x71, 0x71, 0x6a, 0xb1, 0x04, 0xb3, 0x02, 0xb3, 0x06, 0xa7, 0x93, 0xf4,
	0xa7, 0x7b, 0xf2, 0xe2, 0x95, 0x89, 0xb9, 0x39, 0x56, 0x4a, 0xe8, 0x2a, 0x94, 0x82, 0xf8, 0x21,
	0x42, 0x8e, 0x30, 0x11, 0x21, 0x1f, 0x2e, 0xa1, 0xa2, 0xd4, 0xdc, 0xfc, 0x32, 0x54, 0x93, 0x58,
	0xc0, 0x26, 0xc9, 0x7e, 0xba, 0x27, 0x2f, 0x09, 0x31, 0x09, 0x53, 0x8d, 0x52, 0x90, 0x20, 0x4c,
	0x10, 0x6e, 0x1a, 0xaa, 0xef, 0x9d, 0x3c, 0x56, 0x3c, 0x92, 0x63, 0x3c, 0xf1, 0x48, 0x8e, 0xf1,
	0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e,
	0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xad, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc,
	0x5c, 0xfd, 0x9c, 0xcc, 0xbc, 0x54, 0xfd, 0x9c, 0xa4, 0x5c, 0xdd, 0xe2, 0x94, 0x6c, 0xfd, 0x0a,
	0xe4, 0x18, 0x2e, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0xc7, 0x98, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x0f, 0xf5, 0x03, 0x1b, 0x00, 0x02, 0x00, 0x00,
}

func (m *DisableConsortiumProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DisableConsortiumProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DisableConsortiumProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintConsortium(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintConsortium(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EditAllowedValidatorsProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditAllowedValidatorsProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditAllowedValidatorsProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RemovingAddresses) > 0 {
		for iNdEx := len(m.RemovingAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RemovingAddresses[iNdEx])
			copy(dAtA[i:], m.RemovingAddresses[iNdEx])
			i = encodeVarintConsortium(dAtA, i, uint64(len(m.RemovingAddresses[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.AddingAddresses) > 0 {
		for iNdEx := len(m.AddingAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AddingAddresses[iNdEx])
			copy(dAtA[i:], m.AddingAddresses[iNdEx])
			i = encodeVarintConsortium(dAtA, i, uint64(len(m.AddingAddresses[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintConsortium(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintConsortium(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintConsortium(dAtA []byte, offset int, v uint64) int {
	offset -= sovConsortium(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DisableConsortiumProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovConsortium(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovConsortium(uint64(l))
	}
	return n
}

func (m *EditAllowedValidatorsProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovConsortium(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovConsortium(uint64(l))
	}
	if len(m.AddingAddresses) > 0 {
		for _, s := range m.AddingAddresses {
			l = len(s)
			n += 1 + l + sovConsortium(uint64(l))
		}
	}
	if len(m.RemovingAddresses) > 0 {
		for _, s := range m.RemovingAddresses {
			l = len(s)
			n += 1 + l + sovConsortium(uint64(l))
		}
	}
	return n
}

func sovConsortium(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConsortium(x uint64) (n int) {
	return sovConsortium(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DisableConsortiumProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConsortium
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DisableConsortiumProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DisableConsortiumProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConsortium(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConsortium
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditAllowedValidatorsProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConsortium
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditAllowedValidatorsProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditAllowedValidatorsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddingAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddingAddresses = append(m.AddingAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemovingAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConsortium
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConsortium
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemovingAddresses = append(m.RemovingAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConsortium(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConsortium
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConsortium(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConsortium
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConsortium
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConsortium
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConsortium
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConsortium
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConsortium        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConsortium          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConsortium = fmt.Errorf("proto: unexpected end of group")
)
